{"version":3,"sources":["components/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodList","goods","map","good","goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","theWayToSort","setTheWayToSort","reverseList","setReverseList","sortedList","toChangeDirection","preparedGoods","sort","a","b","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","toString","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SCEFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,iBACtBC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EA5BR,SAA0BZ,EAAOa,EAAmBL,GAClD,IAAMM,EAAa,YAAOd,GAqB1B,OAnBIQ,GACFM,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAEE,cAAcD,GAEzB,KAAKZ,EACH,OAAOW,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXN,GACFC,EAAcM,UAGTN,EAMYO,CACjBlB,EACAO,EACAF,GAGF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAgBL,IAC/BoB,KAAK,SACLF,UAAS,yBAAoBd,IAAiBJ,GAAwB,YAHxE,iCAQA,wBACEmB,QAAS,kBAAMd,EAAgBJ,IAC/BmB,KAAK,SACLF,UAAS,4BAAuBd,IAAiBH,GAAmB,YAHtE,4BAQA,wBACEkB,QAAS,WACPZ,GAAgBD,IAElBc,KAAK,SACLF,UAAS,6BAAwBZ,GAAgB,YALnD,sBAUEE,EAAWa,aAAetB,EAAgBsB,YACvCf,IACH,wBACEa,QAAS,WACPd,EAAgB,IAChBE,GAAe,IAEjBa,KAAK,SACLF,UAAU,4BANZ,sBAaJ,cAAC,EAAD,CAAUtB,MAAOY,QChGvBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2e9dab4.chunk.js","sourcesContent":["export const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good} data-cy=\"Good\">{good}</li>\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'alphabetically';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, toChangeDirection, theWayToSort) {\n  const preparedGoods = [...goods];\n\n  if (theWayToSort) {\n    preparedGoods.sort((a, b) => {\n      switch (theWayToSort) {\n        case SORT_ALPHABETICALLY:\n          return a.localeCompare(b);\n\n        case SORT_BY_LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (toChangeDirection) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [theWayToSort, setTheWayToSort] = useState('');\n  const [reverseList, setReverseList] = useState(false);\n  const sortedList = getPreparedGoods(\n    goodsFromServer,\n    reverseList,\n    theWayToSort,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setTheWayToSort(SORT_ALPHABETICALLY)}\n          type=\"button\"\n          className={`button is-info ${theWayToSort !== SORT_ALPHABETICALLY && ('is-light')}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setTheWayToSort(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${theWayToSort !== SORT_BY_LENGTH && ('is-light')}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReverseList(!reverseList);\n          }}\n          type=\"button\"\n          className={`button is-warning ${!reverseList && ('is-light')}`}\n        >\n          Reverse\n        </button>\n\n        {(sortedList.toString() !== goodsFromServer.toString()\n          || reverseList) && (\n          <button\n            onClick={() => {\n              setTheWayToSort('');\n              setReverseList(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={sortedList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}